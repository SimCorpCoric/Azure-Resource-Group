{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "globals": {
      "type": "object",
      "metadata": {
        "Description": "Global complex object passed to nested templates"
      }
    },

    "dnsServers": {
      "type": "array",
      "metadata": {
        "description": "The DNS address(es) of the DNS Server(s) used by the VNET"
      }
    },

    "adminPassword": {
      "metadata": {
        "description": "Administrator password"
      },
      "type": "securestring"
    },

    "sicKey": {
      "type": "securestring",
      "minLength": 8,
      "metadata": {
        "description": "One time key for Secure Internal Communication"
      }
    }

  },

  "variables": {
    "basename": "[concat(parameters('globals').baseName, '-cp')]",
    "customData": "[concat('#!/bin/bash\n', '\n', 'installSecurityGateway=\"', variables('installSecurityGateway'), '\"', '\n', 'installSecurityGateway=\"$(echo $installSecurityGateway | tr \"TF\" \"tf\")\"\n', 'installSecurityManagement=\"', variables('installSecurityManagement'), '\"', '\n', 'installSecurityManagement=\"$(echo $installSecurityManagement | tr \"TF\" \"tf\")\"\n', 'adminPassword=\"', parameters('adminPassword'), '\"', '\n', 'managementGUIClientNetwork=\"', variables('managementGUIClientNetwork'), '\"', '\n', 'ManagementGUIClientBase=\"$(echo $managementGUIClientNetwork | cut -d / -f 1)\"\n', 'ManagementGUIClientMaskLength=\"$(echo $managementGUIClientNetwork | cut -d / -f 2)\"\n', 'sicKey=\"', parameters('sicKey'), '\"', '\n', 'conf=\"install_security_gw=$installSecurityGateway\"\n', 'if $installSecurityGateway; then\n', '    conf=\"${conf}&install_ppak=true\"\n', '    conf=\"${conf}&gateway_cluster_member=false\"\n', 'fi\n', 'conf=\"${conf}&install_security_managment=$installSecurityManagement\"\n', 'if $installSecurityManagement; then\n', '    conf=\"${conf}&install_mgmt_primary=true\"\n', '    conf=\"${conf}&mgmt_admin_name=admin\"\n', '    conf=\"${conf}&mgmt_admin_passwd=$adminPassword\"\n', '    conf=\"${conf}&mgmt_gui_clients_radio=network\"\n', '    conf=\"${conf}&mgmt_gui_clients_ip_field=$ManagementGUIClientBase\"\n', '    conf=\"${conf}&mgmt_gui_clients_subnet_field=$ManagementGUIClientMaskLength\"\n', 'fi\n', 'conf=\"${conf}&ftw_sic_key=$sicKey\"\n', '\n', 'config_system -s $conf\n', '\n', 'clish -c \"set static-route 10.200.0.0/20 nexthop gateway address 10.200.9.1 on\"', '\n', 'clish -c \"save config\"', '\n', 'shutdown -r now\n')]",
    "imageOffer": "check-point-r77-10",
    "imagePublisher": "checkpoint",
    "imageReference": {
      "offer": "[variables('imageOffer')]",
      "publisher": "[variables('imagePublisher')]",
      "sku": "sg-byol",
      "version": "latest"
    },
    "incomingTraffic": [
      {
        "name": "[concat(parameters('globals').baseName,'-rds')]",
        "frontendPort": 443,
        "backendPort": 8443
      },
      {
        "name": "[concat(parameters('globals').baseName,'-rdp')]",
        "frontendPort": 3389,
        "backendPort": 3389
      }
    ],

    "installSecurityGateway": true,
    "installSecurityManagement": false,
    "LB1IPConfigId": "[concat(variables('lbId'), '/frontendIPConfigurations/LB1FrontEnd')]",
    "LB2IPConfigId": "[concat(variables('lbId'), '/frontendIPConfigurations/LB2FrontEnd')]",
    "lbId": "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
    "lbName": "lbCheckPointGateway",
    "managementGUIClientNetwork": "0.0.0.0/0",
    "nic1Name": "[concat(variables('nicName'), '-Gateway')]",
    "nic2Name": "[concat(variables('nicName'), '-FWInternal')]",
    "nicName": "[concat('nic', variables('basename'))]",
    "osProfile": {
      "adminPassword": "[parameters('adminPassword')]",
      "adminUsername": "notused",
      "computerName": "[variables('basename')]",
      "customData": "[base64(variables('customData'))]"
    },
    "pipName": "[concat('pip', variables('basename'))]",
    "plan": {
      "name": "sg-byol",
      "product": "[variables('imageOffer')]",
      "publisher": "[variables('imagePublisher')]"
    },
    "publicIPAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]",
    "publicIPAddressLB1Id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('pip', variables('incomingTraffic')[0].name))]",
    "publicIPAddressLB2Id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('pip', variables('incomingTraffic')[1].name))]",
    "routeTableName": "[concat('rt', variables('basename'))]",
    "subnet0Id": "[concat(variables('vnetId'), '/subnets/', parameters('globals').networkSettings.subnet0.name)]",
    "subnet9Id": "[concat(variables('vnetId'), '/subnets/', parameters('globals').networkSettings.subnet9.name)]",
    "vmNamePortal": "[concat('vm', variables('basename'))]",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('globals').networkSettings.name)]"
  },

  "resources": [
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('routeTableName')]",
      "apiVersion": "[parameters('globals').apiVersion.routeTables]",
      "location": "[resourceGroup().location]",
      "properties": {
        "routes": [
          {
            "name": "Route-All",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
            }
          },
          {
            "name": "[concat('subnet-', parameters('globals').networkSettings.subnet1.id, '-', parameters('globals').networkSettings.subnet1.name)]",
            "properties": {
              "addressPrefix": "[parameters('globals').networkSettings.subnet1.prefix]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
            }
          },
          {
            "name": "[concat('subnet-', parameters('globals').networkSettings.subnet2.id, '-', parameters('globals').networkSettings.subnet2.name)]",
            "properties": {
              "addressPrefix": "[parameters('globals').networkSettings.subnet2.prefix]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
            }
          },
          {
            "name": "[concat('subnet-', parameters('globals').networkSettings.subnet3.id, '-', parameters('globals').networkSettings.subnet3.name)]",
            "properties": {
              "addressPrefix": "[parameters('globals').networkSettings.subnet3.prefix]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
            }
          },
          {
            "name": "[concat('subnet-', parameters('globals').networkSettings.subnet4.id, '-', parameters('globals').networkSettings.subnet4.name)]",
            "properties": {
              "addressPrefix": "[parameters('globals').networkSettings.subnet4.prefix]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
            }
          },
          {
            "name": "[concat('subnet-', parameters('globals').networkSettings.subnet5.id, '-', parameters('globals').networkSettings.subnet5.name)]",
            "properties": {
              "addressPrefix": "[parameters('globals').networkSettings.subnet5.prefix]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
            }
          },
          {
            "name": "[concat('subnet-', parameters('globals').networkSettings.subnet6.id, '-', parameters('globals').networkSettings.subnet6.name)]",
            "properties": {
              "addressPrefix": "[parameters('globals').networkSettings.subnet6.prefix]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
            }
          },
          {
            "name": "[concat('subnet-', parameters('globals').networkSettings.subnet7.id, '-', parameters('globals').networkSettings.subnet7.name)]",
            "properties": {
              "addressPrefix": "[parameters('globals').networkSettings.subnet7.prefix]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]"
            }
          }
        ]
      },
      "dependsOn": [ ]
    },

    {
      "apiVersion": "[parameters('globals').apiVersion.network]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('globals').networkSettings.name]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('routeTableName')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('globals').networkSettings.addressSpace]"
          ]
        },
        "dhcpOptions": {
          "dnsServers": "[parameters('dnsServers')]"
        },
        "subnets": [
          {
            "name": "[parameters('globals').networkSettings.subnet0.name]",
            "properties": {
              "addressPrefix": "[parameters('globals').networkSettings.subnet0.prefix]"
            }
          },
          {
            "name": "[parameters('globals').networkSettings.subnet1.name]",
            "properties": {
              "addressPrefix": "[parameters('globals').networkSettings.subnet1.prefix]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
              }
            }
          },
          {
            "name": "[parameters('globals').networkSettings.subnet2.name]",
            "properties": {
              "addressPrefix": "[parameters('globals').networkSettings.subnet2.prefix]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
              }
            }
          },
          {
            "name": "[parameters('globals').networkSettings.subnet3.name]",
            "properties": {
              "addressPrefix": "[parameters('globals').networkSettings.subnet3.prefix]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
              }
            }
          },
          {
            "name": "[parameters('globals').networkSettings.subnet4.name]",
            "properties": {
              "addressPrefix": "[parameters('globals').networkSettings.subnet4.prefix]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
              }
            }
          },
          {
            "name": "[parameters('globals').networkSettings.subnet5.name]",
            "properties": {
              "addressPrefix": "[parameters('globals').networkSettings.subnet5.prefix]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
              }
            }
          },
          {
            "name": "[parameters('globals').networkSettings.subnet6.name]",
            "properties": {
              "addressPrefix": "[parameters('globals').networkSettings.subnet6.prefix]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
              }
            }
          },
          {
            "name": "[parameters('globals').networkSettings.subnet7.name]",
            "properties": {
              "addressPrefix": "[parameters('globals').networkSettings.subnet7.prefix]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
              }
            }
          },
          {
            "name": "[parameters('globals').networkSettings.subnet8.name]",
            "properties": {
              "addressPrefix": "[parameters('globals').networkSettings.subnet8.prefix]"
            }
          },
          {
            "name": "[parameters('globals').networkSettings.subnet9.name]",
            "properties": {
              "addressPrefix": "[parameters('globals').networkSettings.subnet9.prefix]"
            }
          }
        ]
      }
    },

    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "[parameters('globals').apiVersion.pip]",
      "location": "[resourceGroup().location]",
      "name": "[variables('pipName')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[toLower(variables('basename'))]"
        },
        "idleTimeoutInMinutes": 30,
        "publicIPAllocationMethod": "Static"
      }
    },

    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "[parameters('globals').apiVersion.pip]",
      "location": "[resourceGroup().location]",
      "name": "[concat('pip', variables('incomingTraffic')[0].name)]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('incomingTraffic')[0].name]"
        },
        "idleTimeoutInMinutes": 30,
        "publicIPAllocationMethod": "Static"
      }
    },

    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "[parameters('globals').apiVersion.pip]",
      "location": "[resourceGroup().location]",
      "name": "[concat('pip', variables('incomingTraffic')[1].name)]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('incomingTraffic')[1].name]"
        },
        "idleTimeoutInMinutes": 30,
        "publicIPAllocationMethod": "Static"
      }
    },

    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "[parameters('globals').apiVersion.loadBalancer]",
      "dependsOn": [
        "[variables('publicIPAddressLB1Id')]",
        "[variables('publicIPAddressLB2Id')]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('lbName')]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LB1FrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressLB1Id')]"
              }
            }
          },
          {
            "name": "LB2FrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressLB2Id')]"
              }
            }
          }
        ],
        "inboundNatRules": [
          {
            "name": "[concat('nat', variables('incomingTraffic')[0].name)]",
            "properties": {
              "backendPort": "[variables('incomingTraffic')[0].backendPort]",
              "frontendIPConfiguration": {
                "id": "[variables('LB1IPConfigId')]"
              },
              "frontendPort": "[variables('incomingTraffic')[0].frontendPort]",
              "protocol": "tcp"
            }
          },
          {
            "name": "[concat('nat', variables('incomingTraffic')[1].name)]",
            "properties": {
              "backendPort": "[variables('incomingTraffic')[1].backendPort]",
              "frontendIPConfiguration": {
                "id": "[variables('LB2IPConfigId')]"
              },
              "frontendPort": "[variables('incomingTraffic')[1].frontendPort]",
              "protocol": "tcp"
            }
          }
        ]
      }
    },

    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[parameters('globals').apiVersion.nic]",
      "dependsOn": [
        "[variables('vnetId')]",
        "[variables('lbId')]",
        "[variables('publicIPAddressId')]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('nic1Name')]",
      "properties": {
        "enableIPForwarding": true,
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "[parameters('globals').networkSettings.gatewayExternalIPAddress]",
              "privateIPAllocationMethod": "Static",
              "PublicIpAddress": {
                "Id": "[variables('publicIPAddressId')]"
              },
              "subnet": {
                "id": "[variables('subnet0Id')]"
              },
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('lbId'), '/inboundNatRules/', variables('incomingTraffic')[0].name)]"
                },
                {
                  "id": "[concat(variables('lbId'), '/inboundNatRules/', variables('incomingTraffic')[1].name)]"
                }
              ]
            }
          }
        ]
      }
    },

    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[parameters('globals').apiVersion.nic]",
      "dependsOn": [
        "[variables('vnetId')]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('nic2Name')]",
      "properties": {
        "enableIPForwarding": true,
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAddress": "[parameters('globals').networkSettings.gatewayInternalIPAddress]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('subnet9Id')]"
              }
            }
          }
        ]
      }
    },

    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "[parameters('globals').apiVersion.virtualMachine]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nic1Name'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nic2Name'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('vmNamePortal')]",
      "plan": "[variables('plan')]",
      "properties": {
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://', parameters('globals').storageAccountDiagnostics, '.blob.core.windows.net')]"
          }
        },
        "hardwareProfile": {
          "vmSize": "Standard_D2_v2"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2Name'))]",
              "properties": {
                "primary": false
              }
            }
          ]
        },
        "osProfile": "[variables('osProfile')]",
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "name": "osDisk",
            "vhd": {
              "uri": "[concat('http://', parameters('globals').storageAccountAdmin, '.blob.core.windows.net/', parameters('globals').vhdContainerName, '/', variables('vmNamePortal'), '-OS.vhd')]"
            }
          }
        }
      }
    }
  ],
    "outputs": {
      "Gateway": {
        "type": "string",
        "value": "[reference(variables('publicIPAddressId')).IpAddress]"
      },
      "WebApp1": {
        "type": "string",
        "value": "[reference(variables('publicIPAddressLB1Id')).IpAddress]"
      },
      "WebApp2": {
        "type": "string",
        "value": "[reference(variables('publicIPAddressLB2Id')).IpAddress]"
      }
    }
  }